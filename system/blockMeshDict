/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2012                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 0.001;//scale   0.001;

h 40;//26.7;
zw 60;
step -26.7;//-16.02;  //H


vertices
(
    (0 0 0)           //0
    (#calc "2.5*15*$h" 0 0)
    (#calc "2.5*15*$h" $step 0)  //2
    (#calc "(2.5*15+35)*$h" $step 0)
    (#calc "(2.5*15+35)*$h" 0 0)
    (#calc "(2.5*15+35)*$h" $h 0)
    (#calc "2.5*15*$h" $h 0)    //7
    (0 $h 0)

    (0 0 $zw)
    (#calc "2.5*15*$h" 0 $zw)
    (#calc "2.5*15*$h" $step $zw)
    (#calc "(2.5*15+35)*$h" $step $zw)
    (#calc "(2.5*15+35)*$h" 0 $zw)
    (#calc "(2.5*15+35)*$h" $h $zw)
    (#calc "2.5*15*$h" $h $zw)
    (0 $h $zw)
);

blocks
(
    hex (0 1 6 7 8 9 14 15) (100 20 1) 
    simpleGrading 
    (
        1
        //1
        (
            (0.5 0.5 2.5)
            (0.5 0.5 0.4)
        )
        1
    )
    hex (1 4 5 6 9 12 13 14) (100 20 1) 
    simpleGrading 
    (
        1
        //1
        (
            (0.5 0.5 2.5)
            (0.5 0.5 0.4)
        )
        1
    )
    hex (1 2 3 4 9 10 11 12) (16 100 1)  // (y x z)
    simpleGrading 
    (
       0.4 //1
        1
        1
    )      
);

edges
(
);

boundary
(
    frontAndBack
    {
        type empty;
        faces
        (
            (0 1 6 7)
            (1 2 3 4)
            (1 4 5 6)
            (8 9 14 15)
            (9 10 11 12)
            (9 12 13 14)
        );
    }
    inlet
    {
        type patch;
        faces
        (
            (0 7 15 8)
        );
    }
    outlet 
    {
        type patch;
        faces 
        (
            (3 4 12 11)
            (4 5 13 12)
        );
    }
    walls
    {
        type wall;
        faces 
        (

           (0 1 9 8)
           (1 2 10 9)
           (2 3 11 10)

           (7 6 14 15)
           (6 5 13 14)
            
            
        );
    }

);

mergePatchPairs
(
);